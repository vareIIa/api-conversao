[{
    "secao": "Capítulo 4 – Metodologias ágeis no desenvolvimento de software",
    "subsecao": null,
    "unidades": [
        {
            "unidade": [
                "CONTEXTUALIZANDO",
                "No desenvolvimento de software, adaptar-se rapidamente às mudanças é essencial. Para tornar essa adaptação mais eficiente, surgiram as metodologias ágeis, que promovem flexibilidade, colaboração e entrega contínua de valor. Neste capítulo, vamos explorar o Scrum e o Kanban, duas das metodologias ágeis mais utilizadas.",
                "As metodologias ágeis valorizam a flexibilidade, a colaboração e a entrega contínua de valor. Em vez de desenvolver todo o software de uma só vez, ele é criado em ciclos curtos – chamados sprints –, com feedback constante dos usuários para aperfeiçoamento. Aqui, você aprenderá a organizar tarefas, planejar sprints e utilizar ferramentas visuais, como o Kanban, para monitorar o progresso e garantir que o desenvolvimento esteja sempre no caminho certo.",
                "Definição:",
                "As metodologias ágeis surgiram como uma alternativa às abordagens tradicionais de desenvolvimento de software, que geralmente seguiam um modelo linear e rígido, conhecido como cascata. Em 2001, o Manifesto Ágil foi criado para estabelecer valores e princípios voltados à flexibilidade, à colaboração e à entrega contínua de software, focando em responder rapidamente às mudanças e as necessidades dos clientes.",
                "Essas metodologias permitem que os desenvolvedores trabalhem de forma iterativa e incremental, adaptando-se a novas demandas e garantindo que o sistema seja construído em pequenos ciclos de desenvolvimento, chamados sprints. Entre as metodologias ágeis mais conhecidas estão o Scrum e o Kanban, amplamente usados para gerenciar e organizar projetos de software, promovendo o alinhamento e o progresso contínuo em cada etapa do projeto.",
                "",
                "#CURIOSIDADE#",
                "O Scrum surgiu nos anos de 1990 como uma prática de trabalho em equipe inspirada no rugby, onde todos trabalham juntos em direção ao mesmo objetivo. Já o Kanban vem do Japão, da indústria automobilística, metodologia que a Toyota utilizava para manter o fluxo de trabalho eficiente em suas linhas de produção.",
                "#CURIOSIDADE#",
                ""
            ]
        },
        {
            "unidade": [
                "CONECTANDO",
                "O uso de metodologias ágeis no desenvolvimento de software combina a necessidade de flexibilidade e rapidez na entrega de valor com a capacidade da equipe de responder a mudanças. Através de ciclos curtos e interações constantes, os desenvolvedores conseguem revisar, ajustar e aprimorar o software com base em feedback contínuo dos clientes.",
                "A abordagem ágil é especialmente vantajosa em projetos complexos ou com requisitos em constante evolução, pois permite que a equipe se adapte rapidamente às novas demandas. Isso reduz os riscos de retrabalho e aumenta a satisfação do cliente ao entregar incrementos frequentes de software funcionando, proporcionando valor real a cada etapa do processo."
            ]
        },
        {
            "unidade": [
                "APROFUNDANDO",
                "Metodologias ágeis: Scrum e Kanban",
                "Scrum:",
                "O Scrum é uma metodologia ágil amplamente utilizada que organiza o trabalho em ciclos curtos de desenvolvimento chamados sprints, que geralmente duram de duas a quatro semanas. Durante cada sprint, a equipe se concentra em entregar um incremento funcional do software, ou seja, uma parte do sistema que pode ser testada e validada.",
                "Principais papéis no Scrum:",
                "Product Owner: Representa os interesses do cliente e define as prioridades do backlog do produto (lista de tarefas a serem feitas).",
                "Scrum Master: Facilita o processo de Scrum, remove impedimentos e garante que a equipe siga as práticas ágeis.",
                "Equipe de DESENVOLVIMENTO: Responsável por implementar as funcionalidades planejadas no sprint.",
                "",
                "Eventos do Scrum:",
                "Sprint Planning: Reunião no início de cada sprint para planejar as tarefas a serem concluídas.",
                "Daily Scrum: Reuniões diárias, geralmente de 15 minutos, para acompanhar o progresso da equipe.",
                "Sprint Review: Reunião no final do sprint para revisar o trabalho feito e receber feedback.",
                "Sprint Retrospective: Reunião para discutir o que funcionou bem no sprint e o que pode ser melhorado.",
                "",
                "#IMAGEM#",
                "",
                "Kanban:",
                "O Kanban é uma metodologia ágil visual que utiliza um quadro para organizar e acompanhar o fluxo de trabalho. As tarefas são movidas entre colunas que representam diferentes estágios de desenvolvimento, como “A fazer”, “Em progresso” e “Concluído”.",
                "",
                "#IMAGEM#",
                "",
                "Princípios do Kanban:",
                "Visualização do trabalho: Todas as tarefas são visíveis em um quadro, facilitando o acompanhamento do progresso.",
                "Limite de Trabalho em Progresso (WIP): Define o número máximo de tarefas que podem estar “em progresso” ao mesmo tempo, garantindo que a equipe mantenha o foco e evite sobrecarga.",
                "Fluxo contínuo: O trabalho é feito de forma contínua, sem sprints fixos, permitindo uma adaptação rápida a novas prioridades.",
                "",
                "#SAIBAMAIS#",
                "Quer entender como escalar práticas ágeis em grandes equipes? Modelos como Scaled Agile Framework (SAFe) e Large Scale Scrum (LeSS) são abordagens para aplicar metodologias ágeis em grandes projetos. Saiba mais no Scaled Agile e LeSS.",
                "#SAIBAMAIS#",
                "Engenharia de software ágil",
                "1. Desenvolvimento iterativo e incremental",
                "Descrição: Este modelo divide o desenvolvimento do sistema em pequenos ciclos (iterações). A cada iteração, uma parte funcional do sistema é desenvolvida, testada e entregue, permitindo melhorias contínuas.",
                "Conteúdo:",
                "Iterativo: Permite revisar e aprimorar funcionalidades baseadas em feedback.",
                "Incremental: Cada iteração adiciona funcionalidades ao sistema até que ele esteja completo.",
                "Exemplo prático:",
                "Iteração 1: Cadastro de pacientes.",
                "Iteração 2: Agendamento de consultas.",
                "Iteração 3: Cancelamento de consultas.",
                "Benefício: Reduz o risco de erros, pois funcionalidades são entregues gradualmente e ajustadas conforme necessário.",
                "",
                "2. Entrega contínua",
                "Descrição: Estratégia que visa à liberação constante de incrementos funcionais de software, garantindo que as alterações feitas estejam sempre prontas para serem entregues aos usuários.",
                "Conteúdo:",
                "Automação do Pipeline de Deploy: Uso de ferramentas como Jenkins e GitLab CI/CD para integração contínua.",
                "Testes automatizados: Garantem qualidade antes da entrega.",
                "Exemplo prático:",
                "Após cada iteração, a funcionalidade é testada e disponibilizada para o cliente.",
                "Benefício: Melhora a satisfação do cliente ao oferecer funcionalidades rapidamente.",
                "",
                "3. Planejamento e estimativa ágil",
                "Descrição: Envolve o uso de práticas ágeis, como dividir o trabalho em pequenas entregas, estimar esforço e priorizar tarefas.",
                "Conteúdo:",
                "Planejamento em Sprints:",
                "Dividir o trabalho em ciclos curtos (2-4 semanas)",
                "Exemplo: Backlog priorizado com tarefas como “Cadastrar paciente” e “Testar cadastro”",
                "Estimativa com Story Points:",
                "Atribuir pontos de esforço às tarefas com base em complexidade e tamanho",
                "Exemplo: “Cadastrar paciente” = 3 pontos, “Desenvolver login” = 5 pontos",
                "Ferramentas:",
                "Uso de Trello, Jira ou Excel para criar e gerenciar backlog e sprints.",
                ""
            ]
        },
        {
            "unidade": [
                "PRATICANDO",
                "Atividade prática 1: Simulação de Sprint Planning",
                "Objetivo: Simular uma reunião de Sprint Planning com sua equipe.",
                "Instruções:",
                "Escolha um projeto fictício, como um sistema de gerenciamento de alunos.",
                "Defina algumas tarefas principais para o sprint, como “Cadastrar alunos,” “Gerar relatórios,” e “Enviar notificações”.",
                "Priorize essas tarefas com base na importância para o cliente e organize-as no backlog do sprint.",
                "Dicas:",
                "Pense nas tarefas que trariam mais valor imediato para o cliente.",
                "Utilize uma ferramenta como Trello ou papel para listar e organizar as tarefas do sprint.",
                "",
                "Atividade prática 2: Montagem de um Quadro Kanban",
                "Objetivo: Criar um quadro Kanban para um projeto fictício.",
                "Instruções:",
                "Liste algumas tarefas para um projeto, como “Pesquisa de mercado,” “Desenvolver protótipo,” e “Testar funcionalidades.”",
                "Organize essas tarefas nas colunas “A fazer”, “Em progresso”, e “Concluído”.",
                "Defina um limite de WIP (por exemplo, três tarefas) para a coluna “Em progresso” e explique como ele ajuda a equipe a manter o foco, evitando sobrecarga.",
                "Ferramentas:",
                "Utilize um quadro físico ou uma ferramenta online como Trello ou Google Sheets para criar o Kanban.",
                ""
            ]
        },
        {
            "unidade": [
                "SINTETIZANDO",
                "As metodologias ágeis, como Scrum e Kanban, oferecem uma abordagem flexível e iterativa para o desenvolvimento de software, permitindo que as equipes entreguem valor de forma contínua e se adaptem rapidamente a mudanças. No Scrum, os projetos são organizados em sprints – ciclos curtos onde a equipe se concentra em entregar incrementos funcionais do software. Já o Kanban adota um fluxo contínuo de trabalho visual, organizando as tarefas para manter o equilíbrio da carga de trabalho.",
                "Essas práticas ágeis aumentam a produtividade, aprimoram a comunicação entre os envolvidos e garantem que o software evolua conforme as necessidades dos usuários, mesmo em um cenário de requisitos em constante mudança."
            ]
        },
        {
            "unidade": [
                "EXERCITANDO",
                "Questão 1",
                "Descreva os principais papéis no Scrum e a função de cada um no ciclo de desenvolvimento.",
                "Orientação: Revise os papéis do Product Owner, Scrum Master e Equipe de Desenvolvimento. Explique como cada um contribui para o andamento do sprint, focando as responsabilidades específicas de cada papel.",
                "",
                "Questão 2",
                "Explique como o quadro Kanban pode ajudar a equipe a gerenciar o fluxo de trabalho e melhorar a produtividade.",
                "Orientação: Consulte a seção sobre Kanban e entenda como o quadro organiza tarefas e o limite de WIP ajuda a evitar sobrecarga. Descreva como isso mantém o fluxo de trabalho equilibrado.",
                "",
                "Questão 3:",
                "As metodologias ágeis, como Scrum e Kanban, são amplamente utilizadas para gerenciar o desenvolvimento de software, proporcionando flexibilidade e entregas incrementais de valor. Enquanto o Scrum utiliza ciclos curtos chamados sprints, o Kanban se concentra no fluxo contínuo de trabalho.",
                "Com base no conteúdo estudado, escolha a alternativa que melhor explica a principal característica do Scrum em comparação ao Kanban.",
                "a) O Scrum prioriza a entrega contínua de tarefas individuais sem a necessidade de planejamento prévio.",
                "b) O Scrum organiza o trabalho em sprints, com eventos específicos para planejar, revisar e melhorar o processo.",
                "c) O Scrum adota um quadro visual para limitar tarefas em progresso e evitar sobrecarga da equipe.",
                "d) O Scrum é uma metodologia rígida e linear, semelhante ao modelo cascata.",
                "Gabarito: b"
            ]
        },
        {
            "unidade": [
                "RECAPITULANDO",
                "Neste capítulo, exploramos as principais metodologias ágeis no desenvolvimento de software: Scrum e Kanban. Analisamos os principais papéis, eventos e artefatos do Scrum, bem como os princípios e as práticas fundamentais do Kanban.",
                "Principais pontos abordados:",
                "Scrum: Organização do trabalho em sprints, com papéis como Product Owner e Scrum Master, e eventos como Sprint Planning e Daily Scrum.",
                "Kanban: Visualização do trabalho em um quadro, limite de tarefas em progresso (WIP) e fluxo contínuo para manter o equilíbrio da carga de trabalho.",
                "Flexibilidade ágil: Como as metodologias ágeis permitem adaptação rápida a mudanças, aumentando a eficiência e o alinhamento das equipes com as necessidades do cliente.",
                "Essas metodologias proporcionam uma abordagem estruturada e flexível, ajudando as equipes a entregarem valor de forma contínua e alinhada com as expectativas.",
                "",
                "#IMAGEM#",
                "",
                "#Capítulo#"
            ]
        }
    ]
}]