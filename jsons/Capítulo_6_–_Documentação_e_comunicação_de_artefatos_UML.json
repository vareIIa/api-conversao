[{
    "secao": "Capítulo 6 – Documentação e comunicação de artefatos UML",
    "subsecao": null,
    "unidades": [
        {
            "unidade": [
                "CONTEXTUALIZANDO",
                "Documentar os artefatos UML é essencial para garantir a clareza e a continuidade no desenvolvimento do sistema. Uma documentação bem estruturada evita interpretações errôneas e facilita futuras atualizações e manutenções, garantindo que o sistema evolua de forma alinhada com os requisitos iniciais.",
                "Neste capítulo, vamos explorar como documentar corretamente os artefatos UML e como comunicar essas informações para os stakeholders.",
                "Documentar os diagramas e as decisões técnicas é parte fundamental do desenvolvimento de software. Isso garante que todos os envolvidos no projeto estejam na mesma página e facilita a manutenção e a atualização do sistema no futuro. Vamos aprender a registrar essas informações de maneira simples e eficaz, mantendo os artefatos UML sempre acessíveis e compreensíveis para todos.",
                "",
                "#CURIOSIDADE#",
                "Sabia que cerca de 70% do tempo de vida de um sistema é gasto em manutenção? Uma boa documentação facilita essa fase ao permitir que qualquer desenvolvedor compreenda rapidamente a estrutura e o funcionamento do sistema, reduzindo o tempo necessário para atualizações e correções.",
                "#CURIOSIDADE#",
                "",
                "Definição:",
                "A documentação de artefatos UML é uma etapa essencial no desenvolvimento de software, pois garante que todas as decisões, modelos e informações sobre o sistema sejam registradas de maneira clara e acessível. Essa documentação facilita a comunicação entre os membros da equipe e os stakeholders, servindo como uma referência técnica consultável ao longo de todo o ciclo de vida do software, desde o planejamento até a manutenção.",
                "Os artefatos UML – como diagramas de casos de uso, classes e atividades – fornecem a base gráfica para a documentação técnica, representando a estrutura e o comportamento do sistema. Ao documentar esses artefatos, os desenvolvedores asseguram que o sistema seja bem compreendido por todos os envolvidos, o que facilita sua manutenção e sua evolução ao longo do tempo."
            ]
        },
        {
            "unidade": [
                "CONECTANDO",
                "",
                "A documentação técnica é a ponte que conecta o design e a implementação do sistema, fornecendo uma visão clara de como o software deve funcionar. Ela permite que qualquer pessoa envolvida no projeto – seja desenvolvedor, gerente de projeto ou cliente – tenha acesso a informações detalhadas sobre os requisitos e a estrutura do sistema.",
                "Além disso, a comunicação eficaz dos artefatos UML assegura que todos os stakeholders compreendam como o sistema atenderá aos requisitos levantados, como será estruturado e como se comportará durante o uso. Isso garante um entendimento comum e facilita o alinhamento entre as partes interessadas ao longo do desenvolvimento."
            ]
        },
        {
            "unidade": [
                "APROFUNDANDO",
                "A importância da documentação de artefatos UML",
                "Registro das decisões de design:",
                "Durante o desenvolvimento, várias decisões importantes são tomadas sobre estrutura, funcionalidades e fluxos do sistema. A documentação de artefatos UML registra essas decisões, oferecendo uma visão clara e organizada para todos os envolvidos.",
                "",
                "Facilitação da manutenção:",
                "Com uma documentação adequada, a equipe de manutenção consegue entender rapidamente o funcionamento do sistema no futuro. Diagramas de classes, por exemplo, mostram as relações entre componentes, facilitando a localização de áreas que precisam de ajustes ou melhorias.",
                "",
                "Colaboração e comunicação:",
                "Documentar os artefatos UML promove uma comunicação eficaz entre os membros da equipe. Diagramas visuais tornam mais fácil discutir soluções e garantir que todos tenham uma compreensão clara e alinhada do sistema.",
                "",
                "Artefatos UML e como documentá-los",
                "Diagrama de casos de uso:",
                "O diagrama de casos de uso mostra as interações entre os atores e o sistema, ilustrando as funcionalidades que o sistema deve oferecer. A documentação desse diagrama deve identificar todos os atores e casos de uso, detalhando como essas interações acontecem.",
                "#IMAGEM#",
                "",
                "Como documentar: Descreva cada caso de uso em detalhes, incluindo objetivo, pré-condições, fluxo principal e fluxos alternativos.",
                "Exemplo:",
                "Modelo de documentação",
                "Exemplo para um caso de uso: “Fazer pedido”",
                "#IMAGEM#",
                "Exemplo para o caso de uso: “Cancelar pedido”",
                "#IMAGEM#",
                "",
                "",
                "Diagrama de classes:",
                "O diagrama de classes representa a estrutura do sistema, descrevendo as classes, seus atributos, métodos e os relacionamentos entre elas. A documentação deve detalhar cada classe, suas responsabilidades e as interações entre elas.",
                "#IMAGEM#",
                "",
                "Como documentar: Para cada classe, especifique sua função e responsabilidades. Liste os atributos e os métodos, com definições e propósitos específicos.",
                "Exemplo:\nDocumentação do diagrama de classes - Sistema de consultas",
                "Objetivo do diagrama",
                "Representar a estrutura estática do sistema de consultas, descrevendo as classes principais, seus atributos, métodos e os relacionamentos entre elas.",
                "",
                "Descrição das classes",
                "Paciente",
                "Descrição: Representa um paciente registrado no sistema que pode realizar consultas.",
                "Atributos:",
                "nome (String): Nome do paciente.",
                "rg (String): Registro geral do paciente.",
                "endereço (String): Endereço do paciente.",
                "telefone (String): Contato telefônico do paciente.",
                "data de nascimento (Date): Data de nascimento do paciente.",
                "profissão (String): Profissão do paciente.",
                "Métodos:",
                "verificarPacienteCadastrado(): Verifica se o paciente já está registrado no sistema.",
                "adicionarPaciente(): Adiciona um novo paciente ao sistema.",
                "obterPaciente(): Retorna os dados de um paciente.",
                "obterConsulta(): Retorna as consultas marcadas por um paciente.",
                "adicionarConsulta(): Adiciona uma nova consulta ao paciente.",
                "localizarPaciente(): Encontra um paciente no sistema pelo nome ou RG.",
                "cadastrarPaciente(): Registra um novo paciente no sistema.",
                "",
                "Serviço",
                "Descrição: Representa os serviços oferecidos pelo sistema, como limpeza/restauração e exames.",
                "Atributos:",
                "descrição (String): Detalhes do serviço.",
                "preço (Float): Valor do serviço.",
                "Métodos:",
                "registrarServico(): Adiciona um novo serviço ao sistema.",
                "recuperarServico(): Retorna informações sobre um serviço cadastrado.",
                "",
                "Limpeza/restauração (Herança da classe Serviço)",
                "Atributos:",
                "material usado (String): Materiais utilizados no procedimento.",
                "dente tratado (String): Dente que foi restaurado.",
                "Exame (Herança da classe Serviço)",
                "Atributos:",
                "medida preventiva (String): Tipo de prevenção realizada no exame.",
                "tipo de exame (String): Classificação do exame (ex.: radiografia).",
                "",
                "Consulta",
                "Descrição: Representa as consultas realizadas pelos pacientes.",
                "Atributos:",
                "histórico (String): Registro histórico da consulta.",
                "Métodos:",
                "registrarConsulta(): Adiciona uma nova consulta ao sistema.",
                "recuperarHistoricoConsulta(): Retorna o histórico de consultas realizadas.",
                "",
                "Agenda",
                "Descrição: Representa o agendamento de consultas no sistema.",
                "Atributos:",
                "ano (Integer): Ano da agenda.",
                "Métodos:",
                "abrirAgenda(): Inicializa uma nova agenda para um período.",
                "resgatarAgendaDia(): Recupera as consultas agendadas para um dia específico.",
                "resgatarAgenda2Dias(): Recupera consultas agendadas para os próximos dois dias.",
                "resgatarAgendaSemana(): Recupera as consultas agendadas para a semana.",
                "",
                "Horário",
                "Descrição: Representa os horários disponíveis para as consultas.",
                "Atributos:",
                "data (Date): Data do horário.",
                "hora (Time): Hora específica do agendamento.",
                "Métodos:",
                "obterHorariosDisponiveis(): Retorna os horários livres para agendamento.",
                "alterarDisponibilidadeHorario(): Atualiza o status de disponibilidade de um horário.",
                "",
                "Relacionamentos",
                "Paciente e consulta",
                "Um paciente pode ter várias consultas (relação 1 para muitos - 1..n).",
                "Consulta e horário",
                "Cada consulta é agendada em um horário específico (relação 0..1 para 1).",
                "Serviço e consulta",
                "Uma consulta pode estar associada a vários serviços (relação 0..n).",
                "Agenda e horário",
                "Uma agenda é composta por vários horários (relação 1 para n).",
                "Herança",
                "Limpeza/Restauração e Exame são especializações da classe Serviço.",
                "",
                "",
                "Diagrama de sequência:",
                "O diagrama de sequência descreve o comportamento dinâmico do sistema, mostrando a interação entre objetos ao longo do tempo. A documentação deve explicar as mensagens trocadas e as interações entre objetos em um processo específico.",
                "#IMAGEM#",
                "",
                "Como documentar: Descreva cada interação em termos de mensagens enviadas e recebidas, incluindo o momento em que ocorrem no fluxo de trabalho.",
                "Exemplo:",
                "Documentação do diagrama de sequência - Processo de login",
                "Objetivo do diagrama",
                "Representar o fluxo de interação entre os objetos envolvidos no processo de login do sistema, desde a entrada das credenciais até o acesso à tela principal.",
                "",
                "Descrição dos elementos",
                "Ator:",
                "Usuário: Representa a pessoa que está interagindo com o sistema ao fornecer os dados de login (usuário e senha).",
                "Objetos:",
                "telaLogin (<<boundary>>): Interface responsável por coletar as informações do usuário (login e senha) e enviá-las para validação.",
                "usuarios (<<entity>>): Representa a entidade ou banco de dados que armazena os dados dos usuários.",
                "telaPrincipal (<<boundary>>): Interface principal exibida ao usuário caso as credenciais sejam válidas.",
                "Mensagens:",
                "informaDados(“Login”, “Senha”): O usuário fornece suas credenciais (login e senha) à tela de login.",
                "consultaUsuario(“Login”, “Senha”): A tela de login consulta a entidade usuarios para verificar se as credenciais estão corretas.",
                "usuarioOk := true: Caso as credenciais estejam corretas, a entidade usuarios retorna um valor indicando que o usuário é válido.",
                "new(): Um novo objeto da telaPrincipal é criado para o usuário válido.",
                "kill(): A telaLogin é destruída após a criação da telaPrincipal.",
                "",
                "Modelo de documentação",
                "Passo a passo do fluxo",
                "Interação inicial:",
                "O Usuário envia suas credenciais (“Login” e “Senha”) para a telaLogin através da mensagem informaDados(“Login”, “Senha”).",
                "Validação:",
                "A telaLogin envia a mensagem consultaUsuario(“Login”, “Senha”) para a entidade usuarios, que realiza a verificação no banco de dados.",
                "A entidade usuarios retorna o resultado da validação (usuarioOk := true ou false) para a telaLogin.",
                "Criação da tela principal:",
                "Se usuarioOk == true, a telaLogin envia a mensagem new() para criar uma instância da telaPrincipal.",
                "Finalização:",
                "Após o login bem-sucedido, a telaLogin é destruída com a mensagem kill().",
                "",
                "",
                "Diagrama de atividades:",
                "O diagrama de atividades representa o fluxo de atividades e processos dentro do sistema. A documentação deve descrever cada atividade e as transições entre elas, garantindo uma visão completa do processo.",
                "#IMAGEM#",
                "",
                "Como documentar: Descreva cada atividade, incluindo as condições necessárias para sua ocorrência e os resultados esperados ao final.",
                "Exemplo:\nDocumentação do diagrama de atividades – Análise de cadastro de cliente e e-mail marketing",
                "Objetivo do diagrama",
                "Representar o fluxo de atividades em dois processos principais:",
                "Cadastro e análise de cliente no sistema do banco.",
                "Envio de campanhas de e-mail marketing personalizadas para clientes classificados como “alta renda.”",
                "",
                "Descrição das atividades",
                "1. Cadastro de clientes",
                "Cliente é incluído no sistema do banco:",
                "A atividade inicial onde o cliente é registrado no sistema para posterior análise.",
                "Atendente consulta cadastro para analisar renda e situação cadastral:",
                "O atendente verifica as informações de renda e a existência de pendências cadastrais no SPC ou SERASA.",
                "Decisão 1: Cliente tem registro no SPC ou SERASA?",
                "Sim: O processo de análise é encerrado.",
                "Não: O fluxo prossegue para verificar a renda do cliente.",
                "Decisão 2: Cliente tem renda superior a R$ 10.000,00?",
                "Sim: O cliente é marcado como “alta renda” e segue para a etapa de marketing.",
                "Não: O processo de análise é encerrado.",
                "",
                "2. E-mail marketing",
                "Registra a tag “ALTA RENDA” para o cliente:",
                "Marca o cliente como apto a receber ofertas personalizadas para perfis de alta renda.",
                "Envia e-mail oferecendo investimento no Tesouro Direto:",
                "Uma campanha de e-mail é disparada promovendo investimentos em Tesouro Direto.",
                "Programa novo envio de oferta para o cliente:",
                "O sistema programa novas campanhas para o cliente no futuro, garantindo continuidade no relacionamento.",
                "",
                "Modelo de documentação",
                "Atividade 1: Cadastro do cliente",
                "#IMAGEM#",
                "Atividade 2: E-mail marketing",
                "#IMAGEM#",
                "Boas práticas de documentação de artefatos UML",
                "Clareza e simplicidade:",
                "A documentação deve ser clara e objetiva. Evite descrições longas e complicadas que possam gerar confusão. Use uma linguagem direta e acessível para que todos os envolvidos no projeto possam compreender facilmente.",
                "",
                "Organização:",
                "Estruture a documentação em seções coerentes, agrupando diagramas relacionados e explicações sobre cada um. Isso facilita a navegação e a consulta, tanto durante o desenvolvimento quanto na fase de manutenção do sistema.",
                "",
                "Atualização contínua:",
                "Mantenha a documentação atualizada ao longo do projeto. Qualquer alteração ou ajuste no design ou na implementação do sistema deve ser refletido nos artefatos UML, garantindo que a documentação permaneça precisa e relevante.",
                "",
                "#SAIBAMAIS#",
                "Existem padrões para documentar diagramas UML de forma uniforme e eficiente, como a OMG Unified Modeling Language Specification. Para saber mais sobre esses padrões, acesse o site da OMG e confira as diretrizes de documentação recomendadas.",
                "#SAIBAMAIS#",
                ""
            ]
        },
        {
            "unidade": [
                "PRATICANDO",
                "#ATENCAO#",
                "A documentação deve ser adaptada para o público que irá usá-la. Desenvolvedores precisam de detalhes técnicos, enquanto clientes e gestores podem preferir descrições mais gerais. Organize as informações de acordo com quem irá consultar a documentação.",
                "#ATENCAO#",
                "",
                "Atividade prática 1: Documentação de um Diagrama de casos de uso para um Sistema de reservas de passagens aéreas",
                "Objetivo: Documentar um diagrama de casos de uso para um sistema de reservas de passagens aéreas.",
                "Identifique atores e casos de uso principais (ex.: “Realizar reserva” e “Cancelar reserva”).",
                "Para cada caso de uso, descreva seu objetivo, pré-condições, fluxo principal e alternativas.",
                "",
                "Atividade prática 2: Documentação de um Diagrama de classes para um Sistema de gerenciamento de estoque",
                "Objetivo: Desenvolver a documentação de um diagrama de classes para um sistema de gerenciamento de estoque.",
                "Liste as classes Produto, Fornecedor e Pedido, detalhando atributos, métodos e responsabilidades de cada uma.",
                "",
                "Atividade prática 3: Documentação de um Diagrama de sequência para um Processo de login em um Sistema de e-commerce",
                "Objetivo: Elaborar a documentação para o processo de login em um sistema de e-commerce.",
                "Documente cada interação entre o cliente, o sistema de autenticação e o banco de dados, destacando o propósito de cada mensagem.",
                "Dica: Mantenha a descrição clara e concisa. Lembre-se de que a documentação deve ser compreensível para todos os envolvidos no projeto.",
                "",
                "#FIQUELIGADO#",
                "Mantenha a documentação em uma plataforma acessível para todos, como repositórios de código ou ferramentas de documentação online. Isso facilita o acesso rápido e evita inconsistências nas versões dos documentos.",
                "#FIQUELIGADO#"
            ]
        },
        {
            "unidade": [
                "SINTETIZANDO",
                "A documentação dos artefatos UML é essencial para garantir que o sistema seja compreendido por todos os envolvidos no projeto e para facilitar sua manutenção futura. Documentar corretamente diagramas de casos de uso, classes, sequência e atividades permite registrar as decisões de design, comunicar as funcionalidades do sistema e manter a equipe alinhada com os objetivos do projeto.",
                "Uma documentação clara e bem organizada também assegura que, ao longo do ciclo de vida do software, mudanças e ajustes possam ser realizados de maneira mais eficiente. Além disso, novos membros da equipe podem rapidamente entender o funcionamento do sistema, o que contribui para um desenvolvimento contínuo e bem estruturado."
            ]
        },
        {
            "unidade": [
                "EXERCITANDO",
                "Questão 1",
                "Explique a importância de documentar os diagramas de classes no desenvolvimento de um sistema de software.",
                "Orientação: Releia a seção sobre diagrama de classes e sua função na documentação. Explique como a documentação de diagramas de classes ajuda a registrar a estrutura do sistema, a definir os relacionamentos entre os componentes e a facilitar a compreensão da equipe sobre a organização interna do software. Isso também é útil para manutenção e futuras expansões.",
                "",
                "Questão 2",
                "Quais são as principais informações que devem ser incluídas na documentação de um diagrama de casos de uso?",
                "Orientação: Identifique os elementos essenciais de um diagrama de casos de uso. Liste as informações que devem ser documentadas, como a descrição do caso de uso, os atores envolvidos, as pré-condições, o fluxo principal e os fluxos alternativos. Explique como cada uma dessas informações ajuda a entender melhor as funcionalidades e interações do sistema.",
                "",
                "",
                "Questão 3",
                "O diagrama de classes é um dos artefatos UML mais importantes para representar a estrutura estática de um sistema. Ele detalha as classes, atributos, métodos e os relacionamentos entre elas.",
                "Escolha a alternativa que melhor descreve o conteúdo de uma boa documentação de um diagrama de classes.",
                "a) Identificação dos atores do sistema e suas interações com os casos de uso.",
                "b) Descrição das mensagens trocadas entre objetos e a ordem em que ocorrem.",
                "c) Representação das classes do sistema, com seus atributos, métodos e relacionamentos.",
                "d) Descrição dos processos executados pelo sistema, com decisões e condições de transição.",
                "Gabarito: c"
            ]
        },
        {
            "unidade": [
                "RECAPITULANDO",
                "Neste capítulo, vimos a importância de documentar e comunicar os artefatos UML no processo de desenvolvimento de software. Revisamos as práticas recomendadas para documentar os principais diagramas UML, incluindo:",
                "",
                "Diagrama de casos de uso: Descrição detalhada dos fluxos de interação entre atores e o sistema.",
                "Diagrama de classes: Explicação de classes, atributos, métodos e seus relacionamentos.",
                "Diagrama de sequência: Documentação das interações dinâmicas entre os objetos ao longo do tempo.",
                "Diagrama de atividades: Modelagem do fluxo de processos dentro do sistema.",
                "Uma documentação eficaz facilita a manutenção do sistema e melhora a comunicação entre os membros da equipe e os stakeholders, assegurando que todos tenham uma visão clara e alinhada do funcionamento e das funcionalidades do sistema.",
                "#IMAGEM#",
                "",
                "#Capítulo#"
            ]
        }
    ]
}]